name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        tags: true

    - name: Set up JDK 17 and Maven
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        maven-version: '3.9.2'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Determine new version
      id: version
      run: |
        BASE_VERSION="1.0"
        PATCH=0
        while true; do
          NEW_VERSION="${BASE_VERSION}.${PATCH}"
          if git tag -l | grep -q "^${NEW_VERSION}$"; then
            PATCH=$((PATCH + 1))
          else
            break
          fi
        done
        echo "New version: $NEW_VERSION"
        echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Tag the new version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git tag ${{ env.VERSION }}
        git push origin ${{ env.VERSION }}

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/simple-java-maven-app:${{ env.VERSION }} .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/simple-java-maven-app:${{ env.VERSION }}
